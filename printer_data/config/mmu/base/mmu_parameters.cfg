########################################################################################################################
# Happy Hare MMU Software
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Copyright (C) 2022  moggieuk#6538 (discord) moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Main configuration parameters for the klipper module
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#
# Notes:
#   Macro configuration is specifed separately in 'mmu_macro_vars.cfg'.
#   Full details in https://github.com/moggieuk/Happy-Hare/tree/main/doc/configuration.md
#
[mmu]
happy_hare_version: 3.00			# Don't mess, used for upgrade detection

# MMU Hardware Limits --------------------------------------------------------------------------------------------------
# ██╗     ██╗███╗   ███╗██╗████████╗███████╗
# ██║     ██║████╗ ████║██║╚══██╔══╝██╔════╝
# ██║     ██║██╔████╔██║██║   ██║   ███████╗
# ██║     ██║██║╚██╔╝██║██║   ██║   ╚════██║
# ███████╗██║██║ ╚═╝ ██║██║   ██║   ███████║
# ╚══════╝╚═╝╚═╝     ╚═╝╚═╝   ╚═╝   ╚══════╝
#
# Define the physical limits of your MMU. These setings will be respected regardless of individual speed settings.
#
gear_max_velocity: 300			# Never to be exceeded gear velocity regardless of specific parameters
gear_max_accel: 1500			# Never to be exceeded gear accelaration regardless of specific parameters


# Logging --------------------------------------------------------------------------------------------------------------
# ██╗      ██████╗  ██████╗  ██████╗ ██╗███╗   ██╗ ██████╗ 
# ██║     ██╔═══██╗██╔════╝ ██╔════╝ ██║████╗  ██║██╔════╝ 
# ██║     ██║   ██║██║  ███╗██║  ███╗██║██╔██╗ ██║██║  ███╗
# ██║     ██║   ██║██║   ██║██║   ██║██║██║╚██╗██║██║   ██║
# ███████╗╚██████╔╝╚██████╔╝╚██████╔╝██║██║ ╚████║╚██████╔╝
# ╚══════╝ ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = stepper moves)
# Generally you can keep console logging to a minimal whilst still sending debug output to the mmu.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
# Note: that it is not recommended to keep logging at level greater that 2 (debug) if not debugging an issue because
# of the additional overhead
#
log_level: 1
log_file_level: 2			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange (default), 0 to disable (but still recorded)
log_visual: 1				# 1 log visual representation of filament, 0 = disable
log_startup_status: 1			# Whether to log tool to gate status on startup, 1 = summary (default), 0 = disable


# Movement speeds ------------------------------------------------------------------------------------------------------
# ███████╗██████╗ ███████╗███████╗██████╗ ███████╗
# ██╔════╝██╔══██╗██╔════╝██╔════╝██╔══██╗██╔════╝
# ███████╗██████╔╝█████╗  █████╗  ██║  ██║███████╗
# ╚════██║██╔═══╝ ██╔══╝  ██╔══╝  ██║  ██║╚════██║
# ███████║██║     ███████╗███████╗██████╔╝███████║
# ╚══════╝╚═╝     ╚══════╝╚══════╝╚═════╝ ╚══════╝
#
# Long moves are faster than the small ones and used for the bulk of the bowden movement. Note that you can set two fast
# load speeds depending on whether MMU thinks it is pulling from the buffer or from the spool. It is often helpful to
# use a lower speed when pulling from the spool because more force is required to overcome friction and this prevents
# loosing steps. 100mm/s should be "quiet" with the NEMA14 motor but you can go lower for really low noise
#
# NOTE: Encoder cannot keep up much above 350mm/s so make sure 'bowden_apply_correction' is off at very high speeds!
#
gear_from_buffer_speed: 150		# mm/s Normal speed when loading filament. Conservative is 100mm/s, Max around 300mm/s
gear_from_buffer_accel: 400		# Normal accelaration when loading filament
gear_from_spool_speed: 80		# mm/s Use (lower) speed when loading for the first time (i.e. pulling from spool)
gear_from_spool_accel: 100		# Accelaration when loading from spool
#
gear_short_move_speed: 80		# mm/s Speed when making short moves (like incremental retracts with encoder)
gear_short_move_accel: 600		# Usually the same as gear_from_buffer_accel (for short movements)
gear_short_move_threshold: 70		# Move distance that controls application of 'short_move' speed/accel
gear_homing_speed: 50			# mm/s Speed of gear stepper only homing moves (e.g. homing to gate or extruder)

# Speeds of extruder movement. The 'sync' speeds will be used when gear and extruder steppers are moving in sync
#
extruder_load_speed: 16			# mm/s speed of load move inside extruder from homing position to meltzone
extruder_unload_speed: 16		# mm/s speed of unload moves inside of extruder (very initial move from meltzone is 50% of this)
extruder_sync_load_speed: 18		# mm/s speed of synchronized extruder load moves
extruder_sync_unload_speed: 18		# mm/s speed of synchronized extruder unload moves
extruder_homing_speed: 18		# mm/s speed of extruder only homing moves (e.g. to toolhead sensor)


# Gate loading/unloading -----------------------------------------------------------------------------------------------
#  ██████╗  █████╗ ████████╗███████╗    ██╗      ██████╗  █████╗ ██████╗ 
# ██╔════╝ ██╔══██╗╚══██╔══╝██╔════╝    ██║     ██╔═══██╗██╔══██╗██╔══██╗
# ██║  ███╗███████║   ██║   █████╗      ██║     ██║   ██║███████║██║  ██║
# ██║   ██║██╔══██║   ██║   ██╔══╝      ██║     ██║   ██║██╔══██║██║  ██║
# ╚██████╔╝██║  ██║   ██║   ███████╗    ███████╗╚██████╔╝██║  ██║██████╔╝
#  ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝ 
#
# These setttings control the loading and unloading filament at the gate. The primary options are you use a endstop switch
# at the gate (ala TradRack) or an encoder (ERCF default).  You can even have both a gate sensor for loading/parking and
# still use the encoder for other move verification (see advanced 'gate_endstop_to_encoder' option).
# Note: the `encoder` method, due to the nature of its operation will overshoot a little. This is not a problem in practice
# because the overshoot will simply be compensated for in the subsequent fast bowden move.
#
# Possible gate_homing_endtop names:
#   encoder       - Detect filament position using movement of the encoder
#   mmu_gate      - Use gate endstop
#   mmu_gear      - Use individual per-gate endstop (type-B MMU's)
#   extruder      - Use extruder entry sensor (Only for some type-B designs, see [mmu_machine] require_bowden_move setting)
#
gate_homing_endstop: mmu_gate		# Name of gate endstop, "encoder" forces use of encoder for parking
gate_homing_max: 70			# Maximum move distance to home to the gate (actual move distance for encoder parking)
gate_preload_homing_max: 70             # Maximum homing distance to the mmu_gear endstop (if MMU is fitted with one)
gate_unload_buffer: 50			# Amount to reduce the fast unload so that filament doesn't overshoot when parking
